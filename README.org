#+TITLE: The Grid
#+DATE:
#+AUTHOR: John Hilliard
#+EMAIL: jhilliard@nextjump.com
#+CREATOR: John Hilliard
#+DESCRIPTION:


#+OPTIONS: toc:nil
#+LATEX_HEADER: \usepackage{geometry}
#+LATEX_HEADER: \usepackage{lmodern}
#+LATEX_HEADER: \geometry{left=1in,right=1in,top=1in,bottom=1in}
#+LaTeX_CLASS_OPTIONS: [letterpaper]


A digital frontier

- https://geth.ethereum.org/docs/interface/private-network
- https://ethereum.stackexchange.com/questions/3151/how-to-make-miner-to-mine-only-when-there-are-pending-transactions/3152#3152
- https://en.wikipedia.org/wiki/Container_Linux
- https://en.wikipedia.org/wiki/Fedora_Linux#Editions
- https://www.linuxquestions.org/questions/linux-server-73/directory-quota-601140/
- https://consensys.net/docs/goquorum//en/latest/configure-and-manage/configure/genesis-file/contracts-in-genesis/

* Ansible Resources

- https://aap2.demoredhat.com/decks/ansible_best_practices.pdf
- https://docs.ansible.com/ansible/2.8/user_guide/playbooks_best_practices.html
- https://github.com/whitecloud/ansible-styleguide


#+begin_src bash
# List some hosts
ansible-inventory -i john_hosts --list

# Simple ad-hoc ping check
ansible all -i john_hosts -m ping

# Get the uptime
ansible all -i john_hosts -m command -a 'uptime'

# Command with become
ansible all -i john_hosts -m shell -b -a 'rm -rf /opt/*'
ansible all -i john_hosts -m shell -b -a 'systemctl restart geth'
ansible all -i john_hosts -m shell -b -a 'systemctl stop geth'
ansible all -i john_hosts -m shell -b -a 'rm -rf /root/.ethereum'
ansible all -i john_hosts -m shell -b -a 'rm -rf /root/*'

# Run the full config
ansible-playbook -i john_hosts --ask-vault-pass site.yml
ansible-playbook -i john_hosts --vault-password-file .vault_pass.txt site.yml

# Run for specific host
ansible % ansible-playbook -i john_hosts --vault-password-file .vault_pass.txt site.yml --limit grid_05

# Testnet backup
gpg -a -se -r 2FE2C783343C95357A08385160C9E5DA0BC145B3 .vault_pass.txt
#+end_src



From the Ansible best practices:

#+begin_export ascii
production                # inventory file for production servers
staging                   # inventory file for staging environment

group_vars/
   group1.yml             # here we assign variables to particular groups
   group2.yml
host_vars/
   hostname1.yml          # here we assign variables to particular systems
   hostname2.yml

library/                  # if any custom modules, put them here (optional)
module_utils/             # if any custom module_utils to support modules, put them here (optional)
filter_plugins/           # if any custom filter plugins, put them here (optional)

site.yml                  # master playbook
webservers.yml            # playbook for webserver tier
dbservers.yml             # playbook for dbserver tier

roles/
    common/               # this hierarchy represents a "role"
        tasks/            #
            main.yml      #  <-- tasks file can include smaller files if warranted
        handlers/         #
            main.yml      #  <-- handlers file
        templates/        #  <-- files for use with the template resource
            ntp.conf.j2   #  <------- templates end in .j2
        files/            #
            bar.txt       #  <-- files for use with the copy resource
            foo.sh        #  <-- script files for use with the script resource
        vars/             #
            main.yml      #  <-- variables associated with this role
        defaults/         #
            main.yml      #  <-- default lower priority variables for this role
        meta/             #
            main.yml      #  <-- role dependencies
        library/          # roles can also include custom modules
        module_utils/     # roles can also include custom module_utils
        lookup_plugins/   # or other types of plugins, like lookup in this case

    webtier/              # same kind of structure as "common" was above, done for the webtier role
    monitoring/           # ""
    fooapp/               # ""
#+end_export

Creation of a limited folder

#+begin_src bash
dd if=/dev/zero of=1MB.virt.ext4 count=2000
mkfs.ext4 1MB.virt.ext4
sudo mount -o loop,rw 1MB.virt.ext4 limited-folder
#+end_src

#+begin_export ascii
Filesystem      Size  Used Avail Use% Mounted on
/dev/root        32G  2.9G   29G  10% /
tmpfs           508M     0  508M   0% /dev/shm
tmpfs           203M  877k  203M   1% /run
tmpfs           5.3M     0  5.3M   0% /run/lock
/dev/xvda15     110M  5.5M  104M   5% /boot/efi
tmpfs           102M  4.1k  102M   1% /run/user/1000
/dev/loop10     975k   25k  881k   3% /home/ubuntu/limited-folder
#+end_export


#+begin_export ascii
# This will work
dd if=/dev/zero of=test count=1712

# This will fail
dd if=/dev/zero of=test count=1712
#+end_export


- https://github.com/blockscout/blockscout
- https://github.com/etherparty/explorer
- https://github.com/xops/expedition
- https://github.com/EthVM/EthVM
- https://github.com/wmitsuda/otterscan
- https://github.com/ostdotcom/ost-view

Simple local block explorer: https://github.com/xops/expedition - Check this one out locally and point it to an RPC

